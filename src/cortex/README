-------------- Running actual workload -------------

* Serial simulation

./src/network-workloads/model-net-mpi-replay --sync=1 --algo_type=1
--alloc_file=../src/network-workloads/cortex-conf/allocation.conf
--workload_type="cortex-workload" --lp-io-dir=col-test --lp-io-use-suffix=1 --
../src/network-workloads/cortex-conf/modelnet-mpi-test-dragonfly-5K.conf

* Parallel simulation (optimistic)

mpirun -np 4 ./src/network-workloads/model-net-mpi-replay --sync=3 --algo_type=1
--alloc_file=../src/network-workloads/cortex-conf/allocation.conf
--workload_type="cortex-workload" --lp-io-dir=col-test --lp-io-use-suffix=1 --
../src/network-workloads/cortex-conf/modelnet-mpi-test-dragonfly-5K.conf

* runtime options to turn on the statistics

--lp-io-dir = output-dir-name
--lp-io-use-suffix = 1

* algo_type

0 for TREE
1 for LLF
2 for GLF

* 16K config and job allocation file

network-workloads/cortex-conf/modelnet-mpi-test-dragonfly-16K.conf

and

network-workloads/cortex-conf/allocation-12K-job.conf

* Turning on synthetic traffic

- Use runtime option --generate_synthetic = 1
- The allocation file must have a second job with ranks that are not
  participating in the collective operation. The synthetic traffic pattern will
  run on those remainder ranks.
- By default, we are generating synthetic traffic roughly on the pattern of 
  hpcg miniapp data provided by NERSC. Each rank generates 11 MB of data per
  second. We are currently simulating 2.5 MB of data
  transfer in 0.25 seconds of simulated time.
-------------- Example test program -----------------
./src/network-workloads/model-net-dumpi-traces-dump --sync=1
--workload_type="cortex-workload"
--config_file=../src/network-workloads/cortex-conf/test-workload.conf
--alloc_file=allocation.conf
